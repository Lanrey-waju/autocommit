package util

import (
	"errors"
	"fmt"
	"strconv"

	"github.com/AlecAivazis/survey/v2"
)

func CreateAPIKeyQuestion() *survey.Question {
	return &survey.Question{
		Name: "api_key",
		Prompt: &survey.Password{
			Message: "API Key:",
		},
		Validate: survey.Required,
	}
}

func CreateTemperatureQuestion() *survey.Question {
	return &survey.Question{
		Name: "temperature",
		Prompt: &survey.Input{
			Message: "Temperature",
			Help:    "Temperature refers to a parameter that controls the randomness of the output generated by the model.",
			Default: "0.7",
		},
		Transform: transformToFloat32,
		Validate: func(ans interface{}) error {
			f, err := strconv.ParseFloat(ans.(string), 32)
			if err != nil {
				return errors.New("invalid temperature: must be a number")
			}

			return validateTemperature(float32(f))
		},
	}
}

func validateTemperature(val float32) error {
	if val <= 0 || val > 1 {
		return fmt.Errorf("temperature value must be greater than 0 and less than 1")
	}
	return nil
}

func transformToFloat32(ans interface{}) (newAns interface{}) {
	f, err := strconv.ParseFloat(ans.(string), 32)
	if err != nil {
		return errors.New("Invalid temperature - must be a number")
	}

	return float32(f)
}
